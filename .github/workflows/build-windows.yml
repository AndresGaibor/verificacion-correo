name: build-windows

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: write  # necesario para crear releases

jobs:
  build-online:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Ensure data directory exists
        shell: pwsh
        run: |
          if (!(Test-Path "data")) {
            New-Item -ItemType Directory -Path "data" -Force
          }

      - name: Install Python dependencies
        shell: pwsh
        run: |
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Verify required files exist
        shell: pwsh
        run: |
          Write-Host "Checking required files..."

          if (!(Test-Path "data/correos_template.xlsx")) {
            Write-Error "data/correos_template.xlsx not found"
            exit 1
          }

          if (!(Test-Path "src/verificacion_correo/__main__.py")) {
            Write-Error "Main entry point not found"
            exit 1
          }

          # config.yaml.example is optional - it's in the repo
          if (Test-Path "config.yaml.example") {
            Write-Host "✓ config.yaml.example found"
          } else {
            Write-Warning "config.yaml.example not found (optional)"
          }

          Write-Host "All required files found"

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~\AppData\Local\ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Cache PyInstaller build
        uses: actions/cache@v4
        with:
          path: |
            build
            *.spec
          key: ${{ runner.os }}-pyinstaller-${{ hashFiles('**/*.py', 'requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pyinstaller-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Write-Host "Cache miss - Instalando navegadores Playwright..."
          python -m playwright install chromium

      - name: Clean previous builds
        shell: pwsh
        run: |
          if (Test-Path dist) { Remove-Item -Recurse -Force dist }

      - name: Build (onefile)
        shell: pwsh
        run: |
          pyinstaller --onefile `
            --name VerificacionCorreos `
            --collect-all playwright `
            --collect-all openpyxl `
            --collect-all pyyaml `
            --collect-all nodriver `
            --collect-all fake_useragent `
            --add-data "config.yaml.example;." `
            --add-data "data/correos_template.xlsx;data" `
            --hidden-import tkinter `
            --hidden-import tkinter.ttk `
            --hidden-import tkinter.scrolledtext `
            --hidden-import tkinter.filedialog `
            --hidden-import tkinter.messagebox `
            --hidden-import verificacion_correo.core.config `
            --hidden-import verificacion_correo.core.excel `
            --hidden-import verificacion_correo.core.browser `
            --hidden-import verificacion_correo.core.browser_nodriver `
            --hidden-import verificacion_correo.core.session `
            --hidden-import verificacion_correo.core.extractor `
            --hidden-import verificacion_correo.core.first_run `
            --hidden-import verificacion_correo.core.antidetection `
            --hidden-import verificacion_correo.core.antidetection.delays `
            --hidden-import verificacion_correo.core.antidetection.mouse_emulator `
            --hidden-import verificacion_correo.core.antidetection.typing_simulator `
            --hidden-import verificacion_correo.core.antidetection.user_agents `
            --hidden-import verificacion_correo.core.antidetection.nodriver_manager `
            --hidden-import verificacion_correo.gui.main `
            --hidden-import verificacion_correo.cli.main `
            --hidden-import verificacion_correo.utils.logging `
            --exclude-module matplotlib `
            --exclude-module scipy `
            --exclude-module pytest `
            --exclude-module IPython `
            --exclude-module jupyter `
            --exclude-module pandas `
            --exclude-module numpy `
            --exclude-module PIL `
            --exclude-module cv2 `
            src/verificacion_correo/__main__.py

      - name: Test executable
        shell: pwsh
        run: |
          if (!(Test-Path dist/VerificacionCorreos.exe)) {
            Write-Error "El ejecutable no se creó correctamente"
            exit 1
          }
          $size = (Get-Item dist/VerificacionCorreos.exe).Length / 1MB
          Write-Host "Tamaño del ejecutable: $($size) MB"
          if ($size -lt 50) {
            Write-Warning "El ejecutable parece muy pequeño ($($size) MB). Puede que falten dependencias."
          }

      - name: Upload artifact (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: verificacion-correos-win
          path: dist/VerificacionCorreos.exe
          if-no-files-found: error
          retention-days: 14

      - name: Rename binary with tag
        if: startsWith(github.ref, 'refs/tags/')
        shell: pwsh
        env:
          TAG_NAME: ${{ github.ref_name }}
        run: Copy-Item dist/VerificacionCorreos.exe "dist/VerificacionCorreos-win-$env:TAG_NAME.exe"

      - name: Publish Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        with:
          files: dist/VerificacionCorreos-win-*.exe
          fail_on_unmatched_files: true
          generate_release_notes: true