#!/usr/bin/env python3
"""
Script de lanzamiento para la interfaz gr√°fica.
Facilita el inicio de la GUI con verificaci√≥n de prerrequisitos.
"""

import sys
import os
from tkinter import messagebox
import tkinter as tk


def verificar_prerrequisitos():
    """Verifica que los prerrequisitos b√°sicos est√©n cumplidos."""
    errores = []

    # Verificar archivo de sesi√≥n
    if not os.path.exists("state.json"):
        errores.append(
            "‚ùå No se encuentra el archivo de sesi√≥n (state.json)\n"
            "   Ejecuta primero: python copiar_sesion.py"
        )

    # Verificar archivo de configuraci√≥n
    if not os.path.exists("config.yaml"):
        if os.path.exists("config.yaml.example"):
            errores.append(
                "‚ö†Ô∏è No se encuentra config.yaml\n"
                "   Pero existe config.yaml.example (puedes renombrarlo)"
            )
        else:
            errores.append(
                "‚ùå No se encuentra ni config.yaml ni config.yaml.example\n"
                "   Aseg√∫rate de tener los archivos de configuraci√≥n"
            )

    # Verificar directorio de datos
    if not os.path.exists("data"):
        errores.append(
            "‚ö†Ô∏è No existe el directorio 'data'\n"
            "   Crea el directorio y coloca tu archivo correos.xlsx"
        )
    elif not os.path.exists("data/correos.xlsx"):
        errores.append(
            "‚ö†Ô∏è No se encuentra data/correos.xlsx\n"
            "   Crea el archivo con los correos a verificar"
        )

    return errores


def iniciar_con_checks():
    """Inicia la GUI despu√©s de verificar prerrequisitos."""
    print("üöÄ Iniciando Interfaz Gr√°fica de Verificaci√≥n de Correos")
    print("="*60)

    # Verificar prerrequisitos
    errores = verificar_prerrequisitos()

    if errores:
        print("\n‚ö†Ô∏è Se encontraron los siguientes problemas:")
        for error in errores:
            print(f"   {error}")

        print("\n¬øDeseas continuar de todos modos? (s/N): ", end="")
        respuesta = input().strip().lower()

        if respuesta not in ['s', 'si', 's√≠', 'y', 'yes']:
            print("\n‚ùå Inicio cancelado. Resuelve los problemas e intenta nuevamente.")
            return

    print("\n‚úÖ Iniciando interfaz gr√°fica...")

    try:
        # Importar e iniciar GUI
        from gui import main as gui_main
        gui_main()

    except ImportError as e:
        print(f"\n‚ùå Error al importar m√≥dulos de la GUI: {e}")
        print("   Aseg√∫rate de tener todos los archivos necesarios:")
        print("   - gui.py")
        print("   - gui_config_manager.py")
        print("   - gui_runner.py")
        sys.exit(1)

    except Exception as e:
        print(f"\n‚ùå Error al iniciar la GUI: {e}")
        sys.exit(1)


def mostrar_ayuda():
    """Muestra la ayuda del script."""
    print("""
üìã Interfaz Gr√°fica para Verificaci√≥n de Correos OWA

Uso:
    python iniciar_gui.py          # Inicia GUI con verificaci√≥n
    python iniciar_gui.py --help   # Muestra esta ayuda
    python gui.py                  # Inicia GUI directamente

Prerrequisitos:
    1. Archivo de sesi√≥n: state.json (ejecutar python copiar_sesion.py)
    2. Configuraci√≥n: config.yaml (copiar desde config.yaml.example)
    3. Datos: data/correos.xlsx con correos a verificar

Estructura recomendada:
    verificacion-correo/
    ‚îú‚îÄ‚îÄ gui.py                    # Interfaz gr√°fica principal
    ‚îú‚îÄ‚îÄ iniciar_gui.py            # Script de lanzamiento
    ‚îú‚îÄ‚îÄ config.yaml               # Configuraci√≥n
    ‚îú‚îÄ‚îÄ state.json                # Sesi√≥n guardada
    ‚îú‚îÄ‚îÄ data/
    ‚îÇ   ‚îî‚îÄ‚îÄ correos.xlsx          # Correos a procesar
    ‚îî‚îÄ‚îÄ ... (otros archivos del proyecto)

Para m√°s informaci√≥n, consulta README_GUI.md
    """)


def main():
    """Funci√≥n principal."""
    # Verificar argumentos de l√≠nea de comandos
    if len(sys.argv) > 1 and sys.argv[1] in ['-h', '--help', 'help']:
        mostrar_ayuda()
        return

    # Iniciar GUI con verificaci√≥n
    iniciar_con_checks()


if __name__ == "__main__":
    main()